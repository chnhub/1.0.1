--------------------------Chrome插件笔记-------------------------
JS种类		可访问的API					DOM访问情况	JS访问情况	直接跨域
injected script	和普通JS无任何差别，不能访问任何扩展API		可以访问	可以访问	不可以
content script	只能访问 extension、runtime等部分API		可以访问	不可以		不可以
popup js	可访问绝大部分API，除了devtools系列		不可直接访问	不可以		可以
background js	可访问绝大部分API，除了devtools系列		不可直接访问	不可以		可以
devtools js	只能访问 devtools、extension、runtime等部分API	可以		可以		不可以

-长时间的的业务逻辑放background，popup页面的生命周期很短
-content.js要使用第三方js库需要在manifest.json中事先授权

1. 处理插件的目标界面时，有关元素焦点事件不能放在popup.html页面，需要放injected script或者content script
2. Chrome 禁用未发布的应用解决办法
	1. 开发者模式，解压crx文件，然后加载已解压的扩展程序
	2. windows配置策略（分window和mac版）：配置扩展程序安装白名单（已废弃的名单中，但仍然有效），加入扩展程序ID，重启浏览器
	模板下载：https://support.google.com/chrome/a/answer/187202?hl=zh-Hans 
	策略查询（包括已废弃）：https://support.google.com/chrome/a/answer/7643500
3. content-script引用扩展中的文件，chrome.extension.getURL("images/cute.gif");
4. 使用扩展中的本地资源  mainifest.json中要授权"web_accessible_resources": ["images/*"]
5. 浏览器js调用本地dll插件方式：ActiveX（淘汰）、NPAPI（淘汰）、PPAPI
6. 存储数据：如chrome.storage.sync.get，一定注意查询和插入不能同时执行，都是回调函数，异步调用存在数据错乱
------------js------------
1. 目前大部分浏览器上传文件，浏览器都会把路径转换为虚拟路径
	js模拟用户上传文件暂时未找到解决方法，只能通过上传图片接口上传图片
	使用FormData模拟用户提交表单上传图片：
	1. 文件转为base64
	2. base64转为Blob
	3. formdata.append('参数key(name:一般为file1,file2...，具体需要参考前端实际请求的名字)',Blob,'文件完整名')///!!!!!!!一定要传文件完整名，后台处理需要文件完整名
	var formdata = new FormData();
	var img64 = '文件转base64后的内容';
	var bytes  = atob(img64);
	var ab = new ArrayBuffer(bytes .length);
	var ia = new Uint8Array(ab);
	for (let i = 0; i < bytes.length; i++) {
  		ia[i] = bytes.charCodeAt(i)
	}
	var test = new Blob([ab], {type: 'image/jpeg'});
	formdata.append('file1',test,'photo.jpg');
2. ajax请求头中要去掉X-Requested-With: '...'，负责后台返回977错误
3. 请求体中16进制，参数内容以0D0A0D0A开头 0D0A结束，最后参数结束位置一定要有2D2D，每个参数之间有分隔符，分隔符最前面为4个破折号（------WebKitFormBoundaryDSJHXtPuKLv4AZSq）
文章：https://blog.csdn.net/lipinganq/article/details/77835704
	1. 首部中Content-Type定义了分隔符boundary，以4个破折号开头
	2. 实体中分隔符 = "\r\n--" + 首部中分隔符boundary
	3. 实体首部Content_Disposition中定义了filename表示上传文件名（name=“fileName”表示input域属性），由于这里是一个input框中上传两个Excel文件，所以这里的2个实体首部中的Content_Disposition的name属性都为fileName
	4. 实体首部Content-Type描述了上传文件的类型，这里表示Sheet工作表，即Excel
	5. 实体首部中多行是以CRLF分隔的，即\r\n
	6. 实体中可能存在多部分，每一部分之间以分隔符boundary分隔，每个部分的实体首部与主体之间以CRLFCRLF分隔，即\r\n\r\n
	7. 符号 - 标志 - 十六进制 - 字节码 ， 回车： \r - CR - 0d - 13, 换行：\n - LF - oa - 10
4. 获取网络图片有两种方式，1. 通过xhr请求，服务器返回base64（设置响应类型responseType = "blob"）2. 通过Image对象请求，然后元素转为base64，ele.toDataURL（！！！注意：此方法需要解决跨域问题image.crossOrigin = "*"，服务器需要支持跨域）

5. // notes: json字符串中变量作为key需要加[]，比如[key]:values;
6. //自执行匿名函数，避免全局变量污染(function(){})(params);
7. 字符串引用变量 `${var}` //新版版可用
8. 判断变量不为空时，注意var等于0 if(var)错误，0==""为ture，0为false，""为false
9. 注意同时访问一个数据，一个函数存在多个回调函数访问一个数据，会引发数据更新不及时等问题
10.JSON.parse(str)转字符为数字
----bootstrap table----
1. 设置列宽
 .table {
        table-layout: fixed !important;
 	}
2. 设置表格宽度后隐藏超出部分用..表示
 .table tbody tr td{
        overflow: hidden;
        text-overflow:ellipsis;
        white-space: nowrap;
    }
3. 注意cell的数据带双引号需要转义